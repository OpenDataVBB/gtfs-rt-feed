services:

  vdv-453-nats-adapter:
    image: ghcr.io/OpenDataVBB/vdv-453-nats-adapter:v1.0.0
    # Note: This configuration assumes that you're "mirroring" VBB's VDV-453/VDV-454 API ("VDV server") to your local machine ("host machine").
    # - The VDV server runs on a machine (within the VPN) on port 17000.
    # - Using a "jump host" within this private network, you must run
    #   - a "forward" SSH tunnel, forwarding your host machine's port 17000 to the VDV server's port 17000;
    #   - a "backward" SSH tunnel, forwarding the jump host's port $VDV_453_LOCAL_PORT back to the adapter listening on your host machine.
    # This can be done with the following command:
    # $ ssh -N -T -L "17000:vdv-server:17000" -R "0.0.0.0:$VDV_453_LOCAL_PORT:localhost:$VDV_453_LOCAL_PORT" some-jump-host
    ports:
      - ${VDV_453_LOCAL_PORT:-8080}:8080
    environment:
      PORT: '8080'
      VDV_453_LEITSTELLE: ${VDV_453_LEITSTELLE:-BBNAVI_T}
      VDV_453_ENDPOINT: ${VDV_453_ENDPOINT:-http://host.docker.internal:17000/}
      # other configs
      NATS_SERVERS: nats
    depends_on:
      - nats

  vbb-gtfs-rt-server:
    build: .
    environment:
      NATS_SERVERS: nats
      PGHOST: db
      PGUSER: postgres
      PGPASSWORD: ${POSTGRES_PASSWORD:?missing/empty}
    depends_on:
      - nats
      - db
    ports:
      - '3000:3000'

  gtfs-importer:
    # > profiles defines a list of named profiles for the service to be enabled under. If unassigned, the service is always started but if assigned, it is only started if the profile is activated.
    # https://github.com/compose-spec/compose-spec/blob/77cc0f9575b560c94ca2a3b94db126c54c9e4759/spec.md#profiles
    profiles:
      - import-gtfs
    image: ghcr.io/mobidata-bw/postgis-gtfs-importer:v3
    volumes:
      - './gtfs:/tmp/gtfs'
    environment:
      GTFS_DOWNLOAD_USER_AGENT: ${GTFS_DOWNLOAD_USER_AGENT:-vbb-gtfs-rt-server local dev}
      GTFS_DOWNLOAD_URL: ${GTFS_DOWNLOAD_URL:-https://www.vbb.de/vbbgtfs}
      GTFS_IMPORTER_DB_PREFIX: ${GTFS_IMPORTER_DB_PREFIX:-gtfs}
      PGHOST: db
      PGUSER: postgres
      PGPASSWORD: ${POSTGRES_PASSWORD:?missing/empty}
  nats:
    image: nats:2.10-alpine

  db:
    hostname: db
    image: postgis/postgis:16-3.4-alpine
    ports:
      # allow it to run along side a PostgreSQL server on the host machine
      - '5433:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 'TbUSRHW6oP7lSKIoZOA'
